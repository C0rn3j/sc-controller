name: Build and publish AppImages

on:
  pull_request:
  push:
    branches: [ 'main' ]
  release:
    types: published

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        platform:
          - linux/amd64

    steps:
      - uses: actions/checkout@v4
      - uses: rlespinasse/github-slug-action@v4

      - name: Setup qemu for docker
        uses: docker/setup-qemu-action@v2
        if: matrix.platform != 'linux/amd64'

      - name: Setup buildx for docker
        uses: docker/setup-buildx-action@v2

      - name: Compile in docker
        uses: docker/build-push-action@v4
        with:
          platforms: ${{ matrix.platform }}
          outputs: build
          build-args: |
            APPIMAGE_VERSION=${{ env.GITHUB_REF_SLUG }}
            REPO_OWNER=${{ env.GITHUB_REPOSITORY_OWNER }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: appimages
          path: |
            ./build/*.AppImage
            ./build/*.AppImage.zsync
          if-no-files-found: error

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    needs:
      - build

    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: appimages
          path: assets
      - name: Create checksum for release assets
        shell: bash
        run: |
          algo="${SHA_ALGORITHM:-256}"
          find assets -type f | while read -r asset; do
            shasum --binary --algorithm "${algo}" "${asset}" >"${asset}.sha${algo}"
          done
      - name: Upload artifacts to GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: assets/*
